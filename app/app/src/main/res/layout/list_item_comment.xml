<?xml version="1.0" encoding="utf-8"?>
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools" >

    <data>
        <import type="android.view.View" />
        <import type="android.graphics.Typeface" />
        <import type="com.example.hakonsreader.views.util.ClickHandler"/>
        <import type="com.example.hakonsreader.App"/>
        <import type="com.example.hakonsreader.api.model.User"/>

        <variable
            name="post"
            type="com.example.hakonsreader.api.model.RedditPost" />

        <variable
            name="comment"
            type="com.example.hakonsreader.api.model.RedditComment" />

        <variable
            name="adapter"
            type="com.example.hakonsreader.recyclerviewadapters.CommentsAdapter" />
    </data>

    <!-- TODO flatten this layout -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/background"

        android:onLongClick="@{view -> adapter.hideCommentsLongClick(view, comment)}"
        android:paddingTop="@{comment.depth == 0 ? @dimen/topLevelCommentTopPadding : 0}">

        <!-- The barrier for the side bars. The sidebars are referenced by the barrier, and everything else is
         put to the right of the barrier-->
        <androidx.constraintlayout.widget.Barrier
            android:id="@+id/sideBarsBarrier"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"

            app:barrierDirection="right"

            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintTop_toTopOf="parent"

            app:sideBars="@{comment.depth}" />

        <!-- Normal comment layout. Even if the layout visibility is set to GONE it might still render
         the view, which is probably inefficient (function calls are still called). Might be better for
         performance to do something with this in code instead -->
        <androidx.constraintlayout.widget.ConstraintLayout
            android:id="@+id/normalComment"
            android:layout_width="0dp"
            android:layout_height="wrap_content"

            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="1.0"
            app:layout_constraintStart_toEndOf="@+id/sideBarsBarrier"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.0">

            <TextView
                android:id="@+id/commentAuthor"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:paddingStart="0dp"
                android:paddingEnd="0dp"

                android:onClick="@{(view) -> ClickHandler.openProfileInActivity(view, comment.author)}"

                android:text='@{comment != null ? @string/author_prefixed(comment.author) : "" }'
                android:textColor="@color/link_color"

                app:asAdmin="@{comment.admin}"
                app:asMod="@{comment.mod}"
                app:asPoster="@{comment.byPoster}"

                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent"

                tools:text="u/hakonschia" />

            <!-- Note: the visibility of this is set to GONE if there is no authorFlair -->
            <FrameLayout
                android:id="@+id/authorFlair"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_marginStart="10dp"

                app:authorFlair="@{comment}"

                app:layout_constraintBottom_toBottomOf="@+id/commentAuthor"
                app:layout_constraintStart_toEndOf="@+id/commentAuthor"
                app:layout_constraintTop_toTopOf="@+id/commentAuthor" />

            <TextView
                android:id="@+id/commentAge"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"

                android:textColor="@color/secondary_text_color"
                app:createdAtShortened="@{comment != null ? comment.createdAt : -1}"

                app:layout_constrainedWidth="true"
                app:layout_constraintEnd_toStartOf="@+id/stickied"
                app:layout_constraintHorizontal_bias="0.0"
                app:layout_constraintStart_toEndOf="@id/authorFlair"
                app:layout_constraintTop_toTopOf="parent"

                tools:text="2h" />

            <!-- Stickied and locked icons
            These need default to GONE or else they will appear for a split second before
            the UI is updated-->
            <ImageView
                android:id="@+id/stickied"
                android:layout_width="18dp"
                android:layout_height="18dp"

                android:layout_marginEnd="8dp"
                android:src="@drawable/ic_stickied"

                android:visibility="@{comment.stickied ? View.VISIBLE : View.GONE, default=gone}"
                app:layout_constraintEnd_toStartOf="@+id/lock"

                app:layout_constraintTop_toTopOf="@+id/commentAuthor"
                tools:visibility="visible" />

            <ImageView
                android:id="@+id/lock"
                android:layout_width="18dp"
                android:layout_height="18dp"

                android:src="@drawable/ic_baseline_lock_24"

                android:visibility="@{comment.locked ? View.VISIBLE : View.GONE, default=gone}"
                app:layout_constraintEnd_toEndOf="parent"

                app:layout_constraintTop_toTopOf="@+id/commentAuthor"
                tools:visibility="visible" />

            <TextView
                android:id="@+id/commentContent"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"

                android:onLongClick="@{(view) -> adapter.hideCommentsLongClickText(view, comment)}"
                android:textColor="@color/text_color"
                android:textColorLink="@color/link_color"

                app:commentMarkdown="@{comment.body}"

                app:layout_constrainedWidth="true"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0"
                app:layout_constraintStart_toStartOf="@+id/commentAuthor"
                app:layout_constraintTop_toBottomOf="@+id/commentAuthor"

                tools:text="@tools:sample/lorem" />

            <!-- TODO show the three dots here and based on if it's by the logged in user show
             menu with "edit" "delete" etc. and otherwise "block user" etc.-->
            <ImageView
                android:id="@+id/popupMenu"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginEnd="16dp"

                android:onClick="@{(view) -> ClickHandler.showPopupForCommentExtra(view, comment)}"
                android:src="@drawable/ic_baseline_more_horiz_24"

                app:layout_constraintEnd_toStartOf="@+id/reply"
                app:layout_constraintTop_toTopOf="@+id/reply" />

            <!-- We have to add commentHidden to the visibility here instead of adding reply to the
            moreComments group, since it would take precedence over post.locked/comment.locked and
            always be shown-->
            <ImageButton
                android:id="@+id/reply"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginEnd="10dp"

                android:background="?android:selectableItemBackground"
                android:contentDescription="@string/content_description_reply_to_comment"
                android:onClick="@{(view) -> adapter.replyListener.replyTo(comment)}"

                android:src="@drawable/ic_baseline_reply_24"

                android:visibility="@{post.locked || post.archived || comment.locked ? View.GONE : View.VISIBLE}"

                app:layout_constraintEnd_toStartOf="@+id/commentVoteBar"
                app:layout_constraintTop_toBottomOf="@+id/commentContent" />

            <com.example.hakonsreader.views.VoteBar
                android:id="@+id/commentVoteBar"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"

                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintTop_toTopOf="@+id/reply" />
        </androidx.constraintlayout.widget.ConstraintLayout>
    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

static def getSecret(key) {
    Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props[key]
}

android {
    signingConfigs {
        sign {
            storeFile file(getSecret("FILE_PATH"))
            storePassword getSecret("STORE_PASSWORD")
            keyAlias getSecret("KEY_ALIAS")
            keyPassword getSecret("KEY_PASSWORD")
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.hakonsreader"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.sign
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        // This wont protect the keys from decompilation (and the reddit client ID isn't really secret
        // anyways), but it's something? In addition, this decouples the application from a specific Reddit application
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "REDDIT_CLIENT_ID", "\"" + getSecret("REDDIT_CLIENT_ID") + "\""
            variant.buildConfigField "String", "REDDIT_CALLBACK_URL", "\"" + getSecret("REDDIT_CALLBACK_URL") + "\""
            variant.buildConfigField "String", "REDDIT_USER_AGENT", "\"" + getSecret("REDDIT_USER_AGENT") + "\""
            variant.buildConfigField "String", "IMGUR_CLIENT_ID", "\"" + getSecret("IMGUR_CLIENT_ID") + "\""
        }
    }


    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    configurations {
        cleanedAnnotations
        compile.exclude group: 'org.jetbrains' , module:'annotations'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "android.arch.lifecycle:extensions:1.1.1"
    annotationProcessor "com.android.databinding:compiler:3.1.4"

    // Room
    final def room_version = '2.2.6'
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    // ExoPlayer
    final def exo_player_version = '2.11.8'
    implementation "com.google.android.exoplayer:exoplayer:$exo_player_version"
    implementation "com.google.android.exoplayer:exoplayer-core:$exo_player_version"
    implementation "com.google.android.exoplayer:exoplayer-dash:$exo_player_version"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exo_player_version"

    // Markwon
    final def markwon_version = '4.6.0'
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:ext-strikethrough:$markwon_version"
    implementation "io.noties.markwon:ext-tables:$markwon_version"
    implementation "io.noties.markwon:syntax-highlight:$markwon_version"
    implementation "io.noties.markwon:editor:$markwon_version"
    implementation "io.noties.markwon:image-picasso:$markwon_version"

    // Misc
    implementation 'com.r0adkll:slidableactivity:2.1.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.jakewharton:process-phoenix:2.0.0'
    implementation 'com.robinhood.ticker:ticker:2.0.2'
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:10.0.5'
    implementation 'com.github.zawadz88.materialpopupmenu:material-popup-menu:4.1.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:26.3.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    // Lifecycle
    final def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Kotlin
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.7.22'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
}
repositories {
    mavenCentral()
}